$#include "LuaScriptInstance.h"

class LuaScriptInstance : public Component
{
    bool CreateObject(const String objectType);
    bool CreateObject(const String fileName, const String objectType);
    void ScriptSubscribeToEvent @ SubscribeToEvent(const String eventName, const String functionName);
    void ScriptUnsubscribeFromEvent @ UnsubscribeFromEvent(const String eventName);
    void ScriptUnsubscribeFromAllEvents @ UnsubscribeFromAllEvents();    
    void ScriptSubscribeToEvent @ SubscribeToEvent(void* object, const String eventName, const String functionName);
    void ScriptUnsubscribeFromEvent @ UnsubscribeFromEvent(void* object, const String eventName);
    void ScriptUnsubscribeFromEvents @ UnsubscribeFromEvents(void* object);
};

$[
LuaScriptObject = {}

function LuaScriptObject:Start()
end

function LuaScriptObject:Stop()
end

function LuaScriptObject:GetNode()
    return self.node
end

function LuaScriptObject:SubscribeToEvent(param1, param2, param3)
    local instance = self.instance
    if instance == nil then
        return
    end
    if param3 == nil then
        instance:SubscribeToEvent(param1, param2)
    else
        instance:SubscribeToEvent(param1, param2, param3)
    end
end

function ScriptObject()
    local o = {}
    setmetatable(o, LuaScriptObject)
    LuaScriptObject.__index = LuaScriptObject
    return o
end

function CreateScriptObjectInstance(object, instance)
    local o = {}
    setmetatable(o, object)
    object.__index = object
    
    instance.object = o
    o.instance = instance
    o.node = instance:GetNode()
    
    -- Call object's start function.
    o:Start()
    
    return o
end

function DestroyScriptObjectInstance(instance)
    local object = instance.object
    if object == nil then
        return
    end
    
    -- Call stop function.
    object:Stop()
    
    object.node = nil
    object.instance = nil
    instance.object = nil
end
$]