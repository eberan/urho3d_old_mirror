$#include "LuaScript.h"

Object* GetEventSender();

void SendEvent(const String eventName, VariantMap& eventData);
void SubscribeToEvent(const String eventName, const String functionName);
void UnsubscribeFromEvent(const String eventName);
void UnsubscribeFromAllEvents();
void SubscribeToEvent(void* object, const String eventName, const String functionName);
void UnsubscribeFromEvent(void* object, const String eventName);
void UnsubscribeFromEvents(void* object);

${
static LuaScript* GetLuaScript()
{
    return GetContext()->GetSubsystem<LuaScript>();
}

static Object* GetEventSender()
{
    return GetContext()->GetEventSender();
}

static void SendEvent(const String& eventName, VariantMap& eventData)
{
    GetLuaScript()->ScriptSendEvent(eventName, eventData);
}

static void SubscribeToEvent(const String& eventName, const String& functionName)
{
    GetLuaScript()->ScriptSubscribeToEvent(eventName, functionName);
}

static void UnsubscribeFromEvent(const String& eventName)
{
    GetLuaScript()->ScriptUnsubscribeFromEvent(eventName);
}

static void UnsubscribeFromAllEvents()
{
    GetLuaScript()->ScriptUnsubscribeFromAllEvents();
}

static void SubscribeToEvent(void* object, const String& eventName, const String& functionName)
{
    GetLuaScript()->ScriptSubscribeToEvent(object, eventName, functionName);
}

static void UnsubscribeFromEvent(void* object, const String& eventName)
{
    GetLuaScript()->ScriptUnsubscribeFromEvent(object, eventName);
}

static void UnsubscribeFromEvents(void* object)
{
    GetLuaScript()->ScriptUnsubscribeFromEvents(object);
}
$}